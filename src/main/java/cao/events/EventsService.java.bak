package cao.events;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.SqlSession;

import cao.pollbridge.PollBridge;
import cao.user.User;
import cao.user.UserMapper;
import mybatis.MyBatisUtil;

public class EventsService {
	
	public String getEventId(String prefix) {
		SqlSession sqlSession = MyBatisUtil.getSqlSessionFactory().openSession();
		try {
			EventsMapper eventsMapper = sqlSession.getMapper(EventsMapper.class);
			return eventsMapper.getEventId(prefix);
		} finally {
			sqlSession.close();
		}
	}

	public void insertEvent(String eventId, String eventName, String eventDescription, 
			String pollStatus, String pollCondition, String eventCreatedBy) {
		SqlSession sqlSession = MyBatisUtil.getSqlSessionFactory().openSession();
		try {
			EventsMapper eventMapper = sqlSession.getMapper(EventsMapper.class);
			eventMapper.insertEvent(eventId, eventName, eventDescription, pollStatus, pollCondition, eventCreatedBy);
			sqlSession.commit();
		} finally {
			sqlSession.close();
		}
	}

	public List<Events> getEventList(String userId, String eventName, String eventDesc) {
		SqlSession sqlSession = MyBatisUtil.getSqlSessionFactory().openSession();
		try {
			EventsMapper eventsMapper = sqlSession.getMapper(EventsMapper.class);
			return eventsMapper.getEventList(userId, eventName, eventDesc);
		} finally {
			sqlSession.close();
		}
	}

	
	public List<Map<String,String>> getPollId(String eventId) {
		SqlSession sqlSession = MyBatisUtil.getSqlSessionFactory().openSession();
		try {
			EventsMapper eventsMapper = sqlSession.getMapper(EventsMapper.class);
			return eventsMapper.getPollId(eventId);
		} finally {
			sqlSession.close();
		}
	}
	
	public List<Events> getEventListByUserId(String userId) {
		SqlSession sqlSession = MyBatisUtil.getSqlSessionFactory().openSession();
		try {
			EventsMapper eventsMapper = sqlSession.getMapper(EventsMapper.class);
			return eventsMapper.getEventListByUserId(userId);
		} finally {
			sqlSession.close();
		}
	}
	
	public List<Events> getEventListByNameAndDesc(String eventName, String eventDesc) {
		SqlSession sqlSession = MyBatisUtil.getSqlSessionFactory().openSession();
		try {
			EventsMapper eventsMapper = sqlSession.getMapper(EventsMapper.class);
			return eventsMapper.getEventListByNameAndDesc(eventName, eventDesc);
		} finally {
			sqlSession.close();
		}
	}
	
	public List<Events> getEventListByName(String eventName) {
		SqlSession sqlSession = MyBatisUtil.getSqlSessionFactory().openSession();
		try {
			EventsMapper eventsMapper = sqlSession.getMapper(EventsMapper.class);
			return eventsMapper.getEventListByName(eventName);
		} finally {
			sqlSession.close();
		}
	}
	
	public List<Events> getEventListByDescription(String eventDescription) {
		SqlSession sqlSession = MyBatisUtil.getSqlSessionFactory().openSession();
		try {
			EventsMapper eventsMapper = sqlSession.getMapper(EventsMapper.class);
			return eventsMapper.getEventListByDescription(eventDescription);
		} finally {
			sqlSession.close();
		}
	}
	
	public List<Events> getEventDetailByEventId(String eventId, String pollLocationId,
			String pollDateTimeId, String choiceId) {
		SqlSession sqlSession = MyBatisUtil.getSqlSessionFactory().openSession();
		try {
			EventsMapper eventsMapper = sqlSession.getMapper(EventsMapper.class);
			return eventsMapper.getEventDetailByEventId(eventId, pollLocationId, pollDateTimeId, choiceId);
		} finally {
			sqlSession.close();
		}
	}
	
}
