<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cao.user.UserMapper">
	<!-- <select id="getUserById" parameterType="int"
		resultType="com.sivalabs.mybatisdemo.domain.User">
		SELECT
		user_id as userId,
		email_id as emailId ,
		password,
		first_name as firstName,
		last_name as lastName
		FROM USER
		WHERE USER_ID = #{userId}
	</select> -->
	<!-- Instead of referencing Fully Qualified Class Names we can register 
		Aliases in mybatis-config.xml and use Alias names. -->	
		
	<select id="getUserId" parameterType="String" resultType="String">
		select GET_ID(#{prefix}) as user_id
	</select>
	
	<resultMap type="User" id="UserResult">
		<id property="userId" column="user_id" />
		<id property="userName" column="user_name"></id>
		<result property="userName" column="user_name" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="roleId" column="role_id" />
		<result property="isLoggedIn" column="is_logged_in" />
		<result property="dateCreated" column="date_created" />
	</resultMap>
	
	<select id="getUserByUserName" parameterType="String" resultMap="UserResult">
		select * from ms_user where user_name=(#{userName})
	</select>
	
	<select id="getUserByEmail" parameterType="String" resultMap="UserResult">
		select * from ms_user where email=(#{email})
	</select>
	
	<select id="getPasswordByEmail" parameterType="String" resultType="String">
		select password from ms_user where email=(#{email})
	</select>

	<!-- <select id="getListUser" resultMap="UserResult">
		SELECT * FROM MS_USER
	</select> -->
	
	<insert id="insertUser" parameterType="User" statementType="CALLABLE">
		INSERT INTO MS_USER(USER_ID, USER_NAME, EMAIL, PASSWORD, ROLE_ID, IS_LOGGED_IN, DATE_CREATED)
		VALUES(#{userId}, #{userName}, #{email}, #{password}, #{roleId}, 0, now())
	</insert>
		
	<update id="updateUserAfterLogin" parameterType="User" statementType="CALLABLE">
		UPDATE MS_USER
		SET
		IS_LOGGED_IN='1'
		WHERE USER_ID = #{userId}
	</update>
	
	<select id="checkUserName" parameterType="String" resultType="int">
		select count(1) from ms_user where user_name=#{userNameBaru}
	</select>
	
	<select id="checkRelationship" parameterType="String" resultType="int">
		select 
		(select count(1) from relationship where user_one_name=#{userNameLama})+
		(select count(1) from relationship where user_two_name=#{userNameLama})
		as jumlah
	</select>
	
	<update id="updateUsername" parameterType="User" statementType="CALLABLE">
		update ms_user 
		set user_name=#{userNameBaru} 
		where user_name=#{userName}
	</update>
	
	<update id="updateRelationshipUserOne" parameterType="User" statementType="CALLABLE">
		update relationship
		set user_one_name=#{userNameBaru}
		where user_one_name=#{userName}
	</update>
	
	<update id="updateRelationshipUserTwo" parameterType="User" statementType="CALLABLE">
		update relationship
		set user_two_name=#{userNameBaru}
		where user_two_name=#{userName}
	</update>
</mapper>