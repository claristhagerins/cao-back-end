package cao.relationship;

import cao.user.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.boon.json.JsonFactory;
import org.boon.json.ObjectMapper;

import cao.user.User;
import cao.user.UserService;

@RestController
@RequestMapping("/relationship")
public class RelationshipController {
	User user = new User();
	Relationship relationship = new Relationship();

	@PostMapping(value = "/showFriendList")
	public @ResponseBody String showFriendList(@RequestParam String userId, @RequestBody Relationship friend) {
		RelationshipService rsrv = new RelationshipService();
		List<Relationship> listFriends = null;
		ObjectMapper mapper = JsonFactory.create();
		
		String friendName = friend.getFriendName();
		String listResultJson = null;
		
		if ("".equals(friendName)) friendName = null;		

		listFriends = rsrv.getFriendList(userId, friendName);		

		listResultJson = mapper.writeValueAsString(listFriends);
		return listResultJson;
	}
	
	@PostMapping(value = "/addFriend")
	public @ResponseBody String addFriend(@RequestParam String userId, @RequestBody Relationship friend) {
		RelationshipService rsrv = new RelationshipService();
		List<Relationship> listFriends = null;
		ObjectMapper mapper = JsonFactory.create();
		
		String friendName = friend.getFriendName();
		String listResultJson = null;
		
		if ("".equals(friendName)) friendName = null;		

		listFriends = rsrv.getFriendList(userId, friendName);		

		listResultJson = mapper.writeValueAsString(listFriends);
		return listResultJson;
	}
}
